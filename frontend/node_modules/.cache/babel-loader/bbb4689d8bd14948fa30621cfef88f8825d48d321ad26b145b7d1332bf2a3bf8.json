{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with default config\nconst axiosInstance = axios.create({\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: false // Set to false for cross-domain requests without credentials\n});\n\n// Add a request interceptor\naxiosInstance.interceptors.request.use(config => {\n  console.log('Request URL:', config.url);\n  console.log('Request Method:', config.method);\n  console.log('Request Headers:', config.headers);\n  console.log('Request Data:', config.data);\n\n  // Get the token from localStorage if it exists\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\naxiosInstance.interceptors.response.use(response => {\n  console.log('Response Status:', response.status);\n  console.log('Response Data:', response.data);\n  return response;\n}, error => {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.error('Error Status:', error.response.status);\n    console.error('Error Data:', error.response.data);\n    console.error('Error Headers:', error.response.headers);\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('Error Request:', error.request);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.error('Error Message:', error.message);\n  }\n  console.error('Error Config:', error.config);\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","headers","withCredentials","interceptors","request","use","config","console","log","url","method","data","user","JSON","parse","localStorage","getItem","token","Authorization","error","Promise","reject","response","status","message"],"sources":["C:/Users/kavin/Documents/GitHub/PAF_Project/frontend/src/services/axios-config.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with default config\r\nconst axiosInstance = axios.create({\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json'\r\n  },\r\n  withCredentials: false // Set to false for cross-domain requests without credentials\r\n});\r\n\r\n// Add a request interceptor\r\naxiosInstance.interceptors.request.use(\r\n  config => {\r\n    console.log('Request URL:', config.url);\r\n    console.log('Request Method:', config.method);\r\n    console.log('Request Headers:', config.headers);\r\n    console.log('Request Data:', config.data);\r\n    \r\n    // Get the token from localStorage if it exists\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    if (user && user.token) {\r\n      config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  error => {\r\n    console.error('Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\naxiosInstance.interceptors.response.use(\r\n  response => {\r\n    console.log('Response Status:', response.status);\r\n    console.log('Response Data:', response.data);\r\n    return response;\r\n  },\r\n  error => {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error('Error Status:', error.response.status);\r\n      console.error('Error Data:', error.response.data);\r\n      console.error('Error Headers:', error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('Error Request:', error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('Error Message:', error.message);\r\n    }\r\n    console.error('Error Config:', error.config);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ,CAAC;EACDC,eAAe,EAAE,KAAK,CAAC;AACzB,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACpCC,MAAM,IAAI;EACRC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,MAAM,CAACG,GAAG,CAAC;EACvCF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,MAAM,CAACI,MAAM,CAAC;EAC7CH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,MAAM,CAACL,OAAO,CAAC;EAC/CM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,MAAM,CAACK,IAAI,CAAC;;EAEzC;EACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,IAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAK,EAAE;IACtBX,MAAM,CAACL,OAAO,CAACiB,aAAa,GAAG,UAAUN,IAAI,CAACK,KAAK,EAAE;EACvD;EAEA,OAAOX,MAAM;AACf,CAAC,EACDa,KAAK,IAAI;EACPZ,OAAO,CAACY,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACApB,aAAa,CAACI,YAAY,CAACmB,QAAQ,CAACjB,GAAG,CACrCiB,QAAQ,IAAI;EACVf,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEc,QAAQ,CAACC,MAAM,CAAC;EAChDhB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEc,QAAQ,CAACX,IAAI,CAAC;EAC5C,OAAOW,QAAQ;AACjB,CAAC,EACDH,KAAK,IAAI;EACP,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB;IACA;IACAf,OAAO,CAACY,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACG,QAAQ,CAACC,MAAM,CAAC;IACrDhB,OAAO,CAACY,KAAK,CAAC,aAAa,EAAEA,KAAK,CAACG,QAAQ,CAACX,IAAI,CAAC;IACjDJ,OAAO,CAACY,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACG,QAAQ,CAACrB,OAAO,CAAC;EACzD,CAAC,MAAM,IAAIkB,KAAK,CAACf,OAAO,EAAE;IACxB;IACAG,OAAO,CAACY,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACf,OAAO,CAAC;EAChD,CAAC,MAAM;IACL;IACAG,OAAO,CAACY,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACK,OAAO,CAAC;EAChD;EACAjB,OAAO,CAACY,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACb,MAAM,CAAC;EAC5C,OAAOc,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAepB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}