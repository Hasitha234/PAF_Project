{"ast":null,"code":"var _jsxFileName = \"/Users/hasithabandara/Documents/GitHub/PAF_Project/frontend/src/components/ProgressList.js\";\nimport React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressList = ({\n  progressList,\n  onSelect,\n  selectedId\n}) => {\n  const getGoalTypeBadgeClass = goalType => {\n    switch (goalType.toLowerCase()) {\n      case \"weight\":\n        return \"weight-badge\";\n      case \"strength\":\n        return \"strength-badge\";\n      case \"cardio\":\n        return \"cardio-badge\";\n      case \"endurance\":\n        return \"endurance-badge\";\n      case \"flexibility\":\n        return \"flexibility-badge\";\n      default:\n        return \"weight-badge\";\n    }\n  };\n  const formatDate = date => {\n    if (!date) return \"\";\n    return format(new Date(date), \"MMM dd, yyyy\");\n  };\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    variant: \"flush\",\n    children: progressList.map(progress => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `goal-item ${progress.id === selectedId ? \"selected\" : \"\"}`,\n      onClick: () => onSelect(progress.id),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goal-title\",\n        children: progress.goalDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goal-subtitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `goal-type-badge me-2 ${getGoalTypeBadgeClass(progress.goalType)}`,\n          children: progress.goalType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Target: \", formatDate(progress.targetDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-fill\",\n            style: {\n              width: `${progress.progressPercentage}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-value\",\n          children: [Math.round(progress.progressPercentage), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, progress.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressList;\nexport default ProgressList;\nvar _c;\n$RefreshReg$(_c, \"ProgressList\");","map":{"version":3,"names":["React","ListGroup","format","jsxDEV","_jsxDEV","ProgressList","progressList","onSelect","selectedId","getGoalTypeBadgeClass","goalType","toLowerCase","formatDate","date","Date","variant","children","map","progress","className","id","onClick","goalDescription","fileName","_jsxFileName","lineNumber","columnNumber","targetDate","style","width","progressPercentage","Math","round","_c","$RefreshReg$"],"sources":["/Users/hasithabandara/Documents/GitHub/PAF_Project/frontend/src/components/ProgressList.js"],"sourcesContent":["import React from \"react\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { format } from \"date-fns\";\n\nconst ProgressList = ({ progressList, onSelect, selectedId }) => {\n  const getGoalTypeBadgeClass = (goalType) => {\n    switch (goalType.toLowerCase()) {\n      case \"weight\":\n        return \"weight-badge\";\n      case \"strength\":\n        return \"strength-badge\";\n      case \"cardio\":\n        return \"cardio-badge\";\n      case \"endurance\":\n        return \"endurance-badge\";\n      case \"flexibility\":\n        return \"flexibility-badge\";\n      default:\n        return \"weight-badge\";\n    }\n  };\n\n  const formatDate = (date) => {\n    if (!date) return \"\";\n    return format(new Date(date), \"MMM dd, yyyy\");\n  };\n\n  return (\n    <ListGroup variant=\"flush\">\n      {progressList.map((progress) => (\n        <div\n          key={progress.id}\n          className={`goal-item ${progress.id === selectedId ? \"selected\" : \"\"}`}\n          onClick={() => onSelect(progress.id)}\n        >\n          <div className=\"goal-title\">{progress.goalDescription}</div>\n          <div className=\"goal-subtitle\">\n            <span className={`goal-type-badge me-2 ${getGoalTypeBadgeClass(progress.goalType)}`}>\n              {progress.goalType}\n            </span>\n            <span>Target: {formatDate(progress.targetDate)}</span>\n          </div>\n          <div className=\"mt-2\">\n            <div className=\"progress-bar-container\">\n              <div\n                className=\"progress-bar-fill\"\n                style={{ width: `${progress.progressPercentage}%` }}\n              ></div>\n            </div>\n            <div className=\"progress-value\">{Math.round(progress.progressPercentage)}%</div>\n          </div>\n        </div>\n      ))}\n    </ListGroup>\n  );\n};\n\nexport default ProgressList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}