{"ast":null,"code":"import axios from \"./axios-config\";\nconst API_URL = \"http://localhost:8080/api/auth/\";\nclass AuthService {\n  login(username, password) {\n    console.log(`Attempting login for user: ${username}`);\n    return axios.post(API_URL + \"signin\", {\n      username,\n      password\n    }).then(response => {\n      console.log(\"Login response:\", response.data);\n      if (response.data && response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response.data;\n    }).catch(error => {\n      console.error(\"Login error:\", error);\n      throw error;\n    });\n  }\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n  register(username, email, password, fullName) {\n    console.log(`Attempting registration for user: ${username}`);\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n      fullName\n    }).then(response => {\n      console.log(\"Registration response:\", response.data);\n      return response.data;\n    }).catch(error => {\n      console.error(\"Registration error:\", error);\n      throw error;\n    });\n  }\n  getCurrentUser() {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      try {\n        return JSON.parse(user);\n      } catch (e) {\n        console.error(\"Error parsing user from localStorage:\", e);\n        return null;\n      }\n    }\n    return null;\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","username","password","console","log","post","then","response","data","token","localStorage","setItem","JSON","stringify","catch","error","logout","removeItem","register","email","fullName","getCurrentUser","user","getItem","parse","e"],"sources":["/Users/hasithabandara/Documents/GitHub/PAF_Project/frontend/src/services/auth.service.js"],"sourcesContent":["import axios from \"./axios-config\";\n\nconst API_URL = \"http://localhost:8080/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    console.log(`Attempting login for user: ${username}`);\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        console.log(\"Login response:\", response.data);\n        if (response.data && response.data.token) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n        return response.data;\n      })\n      .catch(error => {\n        console.error(\"Login error:\", error);\n        throw error;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password, fullName) {\n    console.log(`Attempting registration for user: ${username}`);\n    return axios\n      .post(API_URL + \"signup\", {\n        username,\n        email,\n        password,\n        fullName\n      })\n      .then(response => {\n        console.log(\"Registration response:\", response.data);\n        return response.data;\n      })\n      .catch(error => {\n        console.error(\"Registration error:\", error);\n        throw error;\n      });\n  }\n\n  getCurrentUser() {\n    const user = localStorage.getItem(\"user\");\n    if (user) {\n      try {\n        return JSON.parse(user);\n      } catch (e) {\n        console.error(\"Error parsing user from localStorage:\", e);\n        return null;\n      }\n    }\n    return null;\n  }\n}\n\nexport default new AuthService(); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAElC,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,WAAW,CAAC;EAChBC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACxBC,OAAO,CAACC,GAAG,CAAC,8BAA8BH,QAAQ,EAAE,CAAC;IACrD,OAAOJ,KAAK,CACTQ,IAAI,CAACP,OAAO,GAAG,QAAQ,EAAE;MACxBG,QAAQ;MACRC;IACF,CAAC,CAAC,CACDI,IAAI,CAACC,QAAQ,IAAI;MAChBJ,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEG,QAAQ,CAACC,IAAI,CAAC;MAC7C,IAAID,QAAQ,CAACC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAE;QACxCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7D;MACA,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACdZ,OAAO,CAACY,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;EAEAC,MAAMA,CAAA,EAAG;IACPN,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,QAAQA,CAACjB,QAAQ,EAAEkB,KAAK,EAAEjB,QAAQ,EAAEkB,QAAQ,EAAE;IAC5CjB,OAAO,CAACC,GAAG,CAAC,qCAAqCH,QAAQ,EAAE,CAAC;IAC5D,OAAOJ,KAAK,CACTQ,IAAI,CAACP,OAAO,GAAG,QAAQ,EAAE;MACxBG,QAAQ;MACRkB,KAAK;MACLjB,QAAQ;MACRkB;IACF,CAAC,CAAC,CACDd,IAAI,CAACC,QAAQ,IAAI;MAChBJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEG,QAAQ,CAACC,IAAI,CAAC;MACpD,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACdZ,OAAO,CAACY,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;EAEAM,cAAcA,CAAA,EAAG;IACf,MAAMC,IAAI,GAAGZ,YAAY,CAACa,OAAO,CAAC,MAAM,CAAC;IACzC,IAAID,IAAI,EAAE;MACR,IAAI;QACF,OAAOV,IAAI,CAACY,KAAK,CAACF,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOG,CAAC,EAAE;QACVtB,OAAO,CAACY,KAAK,CAAC,uCAAuC,EAAEU,CAAC,CAAC;QACzD,OAAO,IAAI;MACb;IACF;IACA,OAAO,IAAI;EACb;AACF;AAEA,eAAe,IAAI1B,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}